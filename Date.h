#pragma once
#ifndef Date_H
#define Date_H


#include <string>
#include <fstream>
#include <iostream>


using namespace std;

/*******************************************************************************************************
* @class Date.h
*
* @brief Date Object Contains the following date information
*
* @purpose to read all unit information from a file and write it to another
*
* @variables
*		day        as a unsigned int - unsigned uses less data and is for positive ints
*
*		month      as a unsigned int
*
*	    month_Name as a std::string
*
*		year       as a unsigned int
*
*
* @author  William Halling 32233703
* @date    March 2021
* @date    Semester 1
* @updated April 2021
*******************************************************************************************************/

class Date
{
public:

	Date();
	
	Date(unsigned temp_Day, unsigned temp_Month, unsigned temp_Year);
	
		//allows date to be written as a month
	Date(unsigned temp_Day, std::string temp_Month_Name, unsigned temp_Year);



			/********************************************************************************************************************************************************************************************************************************************************
			 *@brief Clear
			 *
			 * Purpose: Sets all the Date Variable values to 0, 0, "", 0
			 *
			 *@return void
			 ********************************************************************************************************************************************************************************************************************************************************/

	void Clear();


		/********************************************************************************************************************************************************************************************************************************************************
		* @brief get_Day
		*
		* @Purpose : gets the day as a unsigned const value
		*
		* @return  : m_Day (unsigned const )
		********************************************************************************************************************************************************************************************************************************************************/

	unsigned get_Day() const;



		/********************************************************************************************************************************************************************************************************************************************************
		* @brief set_Day
		*
		* @Purpose:  sets the day variable m_Day
		*
		* @param  :  unsigned temp_Day
		*
		* @return  : void
		********************************************************************************************************************************************************************************************************************************************************/

	void set_Day(unsigned temp_Day);




		/********************************************************************************************************************************************************************************************************************************************************
		 * @brief get_Month
		 *
		 * @Purpose : gets the month as a unsigned const value
		 *
		 * @return  : m_Month (unsigned const )
		 ********************************************************************************************************************************************************************************************************************************************************/

	unsigned get_Month() const;



		/********************************************************************************************************************************************************************************************************************************************************
		 * @brief set_Month
		 *
		 * @Purpose : sets the m_Month
		 *
		 * @param   : unsigned temp_Month
		 *
		 * @return  : void
		 ********************************************************************************************************************************************************************************************************************************************************/

	void set_Month(unsigned temp_Month);



		/********************************************************************************************************************************************************************************************************************************************************
		 * @brief get_Month_Name
		 *
		 * @Purpose : gets the month as a string const value
		 *
		 * @return  : m_Month_Name (c++ std::string const)
		 ********************************************************************************************************************************************************************************************************************************************************/

	std::string get_Month_Name() const;


		/********************************************************************************************************************************************************************************************************************************************************
		 * @brief set_Month_Name
		 *
		 * @Purpose : gets the month as a string const value
		 *
		 * @param   : C++ std::string temp_Month
		 *
		 * @return  : void
		 ********************************************************************************************************************************************************************************************************************************************************/

	void set_Month_Name(std::string temp_Month_Name);




		/********************************************************************************************************************************************************************************************************************************************************
		 * @brief get_Year
		 *
		 * @Purpose : gets the year as a unsigned const value
		 *
		 * @return  : m_Year (unsigned const)
		 ********************************************************************************************************************************************************************************************************************************************************/

	unsigned get_Year() const;



		/********************************************************************************************************************************************************************************************************************************************************
		 * @brief set_Year
		 *
		 * @Purpose : sets the m_Year variable
		 *
		 * @param   : unsigned int
		 *
		 * @return  : void
		 ********************************************************************************************************************************************************************************************************************************************************/

	void set_Year(unsigned temp_Year);

	const Date& operator = (const Date& temporary_Date);

	//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			/*			variables for date	                            */
	//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

private:
	//holds the day as an unsigned integer value the day as a i
	unsigned m_Day;


	///holds the month as a unsigned int value
	unsigned m_Month;


	///holds the month as a string 
	std::string m_Month_Name;


	/// holds the year as an unsigned int value
	unsigned m_Year;
};




	/******************************************************************************************************
	 * @brief std::ostream operator
	 *
	 * @Purpose:    overloads ostream operator to write Date objects
	 *
	 * @return      output_s
	 *******************************************************************************************************/

std::ostream& operator <<(std::ostream& output_s, const Date& date_Marked);



	/******************************************************************************************************
	 * @brief istream operator
	 *
	 * @Purpose:    overloads the istream operator to read Date objects
	 *
	 * @parameter
	 *
	 * @return      input
	 *******************************************************************************************************/

std::istream& operator >>(std::istream& input, Date& date_Marked);

#endif
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
/* End of headder */
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

