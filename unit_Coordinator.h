#pragma once

#include <string>
#include <fstream>
#include <iostream>

using namespace std;
class unit_Coordinator
{
public:
		/********************************************************************************************************************************************************************************************************
		* Default Constructor for unit_Coordinator
		********************************************************************************************************************************************************************************************************/

	unit_Coordinator();


		/********************************************************************************************************************************************************************************************************
		* defined Constructor for unit_Coordinator
		* first_Name
		* last_Name
		* room_Number
		* contact_Number
		* email_Address
		********************************************************************************************************************************************************************************************************/

	unit_Coordinator(std::string temp_First_Name, std::string temp_Last_Name, std::string temp_Room_Number, std::string temp_Contact_Email, long temp_Contact_Number);



		/********************************************************************************************************************************************************************************************************
		 *@brief Clear
		 *
		 * Purpose : Sets all the unit_Coordinator Variable values to "", "", "", 0, ""
		 *
		 *@return  : void
		********************************************************************************************************************************************************************************************************/

	void clear();



		/********************************************************************************************************************************************************************************************************
		 *@brief get_First_Name
		 *
		 * Purpose: gets the unit coordinators first name as a c++ std::string
		 *
		 *@return first_Name (c++ std::string const)
		 ********************************************************************************************************************************************************************************************************/

	std::string get_First_Name() const;



		/********************************************************************************************************************************************************************************************************
		 *@brief set_First_Name
		 *
		 * Purpose : sets the unit coordinators first_Name with the std::string temp_First_Name
		 *
		 * @param  : std::string temp_First_Name
		 *
		 *@return  : void
		 ********************************************************************************************************************************************************************************************************/

	void set_First_Name(std::string temp_First_Name);



		/********************************************************************************************************************************************************************************************************
		 *@brief get_Last_Name
		 *
		 * Purpose : gets the unit coordinators last_Name as a C++ std::string
		 *
		 * @param  :
		 *
		 *@return  last_Name (c++ std::string const)
		 ********************************************************************************************************************************************************************************************************/

	std::string get_Last_Name() const;



		/********************************************************************************************************************************************************************************************************
		 *@brief set_Last_Name
		 *
		 * Purpose : sets the unit coordinators last_Name with the std::string temp_Last_Name
		 *
		 * @param  : std::string temp_Last_Name
		 *
		 *@return  : void
		 ********************************************************************************************************************************************************************************************************/

	void set_Last_Name(std::string temp_Last_Name);



		/********************************************************************************************************************************************************************************************************
		 *@brief get_Room_Number
		 *
		 * Purpose : gets the unit coordinators room number as building.floor.room  c++ std::string
		 *
		 * @param  :
		 *
		 *@return  : room_Number (c++ std::string const)
		 ********************************************************************************************************************************************************************************************************/

	std::string get_Room_Number() const;



		/********************************************************************************************************************************************************************************************************
		 *@brief set_Room_Number
		 *
		 * Purpose : sets the unit coordinators room_Number with temp_Room_Number
		 *
		 * @param  : std::string temp_Room_Number
		 *
		 *@return  : void
		 ********************************************************************************************************************************************************************************************************/

	void set_Room_Number(std::string temp_Room_Number);



		/********************************************************************************************************************************************************************************************************
		 *@brief get_Contact_Number
		 *
		 * Purpose : gets the unit coordinators m_Contact_Number as a long
		 *
		 * @param  : std::string temp_Room_Number
		 *
		 *@return  : m_Contact_Number ( C++ std::string)
		 ********************************************************************************************************************************************************************************************************/

	std::string get_Contact_Number() const;



		/********************************************************************************************************************************************************************************************************
		 *@brief set_Contact_Number
		 *
		 * Purpose : sets the unit coordinators room_Number with temp_Contact_Number
		 *
		 * @param  : long temp_Contact_Number
		 *
		 *@return  : void
		 ********************************************************************************************************************************************************************************************************/

	void set_Contact_Number(std::string temp_Contact_Number);



		/********************************************************************************************************************************************************************************************************
		 *@brief get_Contact_Email_Address
		 *
		 * Purpose : gets the unit coordinators m_Contact_Email
		 *
		 * @param  : 
		 *
		 *@return  : m_Contact_Email (c++ std::string const)
		 ********************************************************************************************************************************************************************************************************/

	std::string get_Contact_Email_Address() const;



		/********************************************************************************************************************************************************************************************************
		 *@brief set_Contact_Email_Address
		 *
		 * Purpose : sets the unit coordinators email_Address with temp_Email_Address
		 *
		 * @param  : long temp_Contact_Number
		 *
		 *@return  : void
		 ********************************************************************************************************************************************************************************************************/

	void set_Contact_Email_Address(std::string temp_Contact_Email);



private:
	/// lecturer first name std::string
	std::string m_First_Name;


	/// lecturere last name std::string
	std::string m_Last_Name;

	///assuming building number.floor number. room number 
	std::string m_Room_Number;

	///assuming numbers are only numbers and not letters
	std::string m_Phone_Number;

	///contact email std::string
	std::string m_Contact_Email_Address;

};


	/********************************************************************************************************************************************************************************************************************************************************
	 * @brief std::ostream operator
	 *
	 * @Purpose : overloads ostream operator to write / read unit objects
	 *
	 * @param   : std::ostream& output_s, const unit_Coordinator& uc_Details
	 * 
	 * @return  : output_s
	 *********************************************************************************************************************************************************************************************************************************************************/


std::ostream& operator <<(std::ostream& output_s, const unit_Coordinator& uc_Details);



	/********************************************************************************************************************************************************************************************************************************************************
	 * @brief istream operator
	 *
	 * @Purpose : overloads the istream operator to read / write unit objects
	 *
	 * @param   : std::istream& input, unit_Coordinator& uc_Details
	 *
	 * @return  : input
	 ********************************************************************************************************************************************************************************************************************************************************/

std::istream& operator >>(std::istream& input, unit_Coordinator& uc_Details);